MySQL cheat sheet
-----------------

MySQL CLIENT
    Default usage
        [query] ... ;       results are shown as tables
        [query] ... \G      results are show line by line
        [query]Â ... \c      kill current command
    Connection
        mysql --user=USER --host=HOST --port=3306 --password='PASS' DB_NAME
        mysql -u USER -h HOST -P 3306 -p'PASS' DB_NAME
    Export
        mysqldump --opts [...] DB_NAME > /tmp/DB_NAME-dump.sql
        mysqldump --opts [...] DB_NAME | gzip > /tmp/DB_NAME-dump.sql.gz
        : use option --skip-opt for a 'diff' usage (no multi-valued insert)
    Import
        mysql [...] DB_NAME < /tmp/DB_NAME-dump.sql
        gunzip < /tmp/DB_NAME-dump.sql.gz | mysql [...] DB_NAME
    Direct duplication
        mysqldump ... DB_NAME1 | mysql ... DB_NAME2

GLOBALS    
    show engines;
    show processlist;

DATABASES
    show databases
    create database [if not exists] DB_NAME default character set utf8
    use DB_NAME
    drop database [if exists] DB_NAME

TABLES
    show tables
    describe TABLE_NAME [column_name]
    desc TABLE_NAME [column_name]
    create [temporary] table [if not exists] TABLE_NAME(
       key type(size) NOT NULL primary KEY AUTO_INCREMENT,
       c1 type(size) NOT NULL,
       c2 type(size) NULL,
       ...
    ) Engine= [InnoDB|MyISAM]|...]
    alter table TABLE_NAME engine=InnoDB;
    drop table [if exists] TABLE_NAME [, TABLE_NAME2, ...] [restrict | cascade]

COLUMNS / KEYS
    add COLUMN_NAME
    drop COLUMN_NAME
    add index INDEX_NAME (COLUMN_NAME, ...)
    drop index INDEX_NAME
    add primary key (COLUMN_NAME,...)
    drop primary key
    create [unique|fulltext] index INDEX_NAME on table (COLUMN_NAME,...)
    List all foreign key constraints
        select * from information_schema.table_constraints where table_schema like "DB_NAME" and constraint_type like "FOREIGN KEY";

QUERIES
    select * from TABLE_NAME
    select COLUMN_NAME, COLUMN_NAME2 as TITLE from TABLE_NAME
    select distinct (COLUMN_NAME) from TABLE_NAME
    select * from TABLE_NAME1 inner join TABLE_NAME2 on conditions
    select * from TABLE_NAME1 left join TABLE_NAME2 on conditions
    select count(*) from TABLE_NAME
    select COLUMN_NAME, COLUMN_NAME2 from TABLE_NAME order by COLUMN_NAME asc [desc], COLUMN_NAME2 asc [desc],...
    select * from TABLE_NAME group by COLUMN_NAME
    select * from TABLE_NAME where COLUMN_NAME like '%value%'
    select * from TABLE_NAME where COLUMN_NAME rlike 'regular_expression'
